
// File generated by Wsutil Compiler version 1.0095 
// This file defines C/C++ functions, callbacks, types that correspond to operations,
// and types specified in WSDL and XSD files processed by Wsutil compiler. The generated 
// type definitions, function and callback declarations can be used with various 
// Web Services APIs either in applications that send and receive requests to and 
// from a running web service, or in the implementation of web services, or in both. 
//
// If Wsutil has generated this file from an XSD file, the file contains definition of 
// C/C++ structures types that correspond to types defined in the XSD file. 
// For example, if the following XSD complexType is defined in the XSD file
//
//      <xsd:complexType name="AddRequest">
//          <xsd:sequence>
//              <xsd:element minOccurs="0" name="a" type="xsd:int" />
//              <xsd:element minOccurs="0" name="b" type="xsd:int" />
//          </xsd:sequence>
//      </xsd:complexType>
// 
// this file contains the following definitions of the structure 
//      // AddRequest (xsd:complexType)
//      // <AddRequest xmlns='http://tempuri.org'>
//      // WS_STRUCT_DESCRIPTION* = &calculator_xsd.globalTypes.AddRequest
//      struct AddRequest
//      {
//          int a;
//          int b;
//      };
//
// For more information on how to use the C/C++ types generated in this file to read or write elements of XML documents that conform to 
// this XSD, please see the documentation for 
// WsReadType() and WsWriteType() functions.
// 
#if _MSC_VER > 1000 
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

// The following types were generated:

//     struct _login;
//     struct _loginResponse;
//     struct _loadUserNetwork;
//     struct _loadUserNetworkResponse;
//     struct _loadUserNetwork_2;
//     struct _loadUserNetwork_2Response;
//     struct _loadUserNetwork_3;
//     struct _loadUserNetwork_3Response;
//     struct _loadUserNetwork_NR;
//     struct _loadUserNetwork_NRResponse;
//     struct _loadUserById;
//     struct _loadUserByIdResponse;

// The following header files must be included in this order before this one

// #include <WebServices.h>
// #include "System.xsd.h"
// #include "GameWS.xsd.h"
// #include "DataModel.Model.xsd.h"

////////////////////////////////////////////////
// C structure definitions for generated types
////////////////////////////////////////////////

// typeDescription: n/a
typedef struct _login 
{
    WCHAR* username; // optional
    WCHAR* password; // optional
    WCHAR* securityPass; // optional
} _login;

// typeDescription: n/a
typedef struct _loginResponse 
{
    int loginResult;
} _loginResponse;

// typeDescription: n/a
typedef struct _loadUserNetwork 
{
    int idUser;
    WCHAR* securityPass; // optional
} _loadUserNetwork;

// typeDescription: n/a
typedef struct _loadUserNetworkResponse 
{
    unsigned int loadUserNetworkResultCount;
    _Field_size_opt_(loadUserNetworkResultCount)struct UserType** loadUserNetworkResult; // optional
} _loadUserNetworkResponse;

// typeDescription: n/a
typedef struct _loadUserNetwork_2 
{
    int idUser;
    WCHAR* securityPass; // optional
} _loadUserNetwork_2;

// typeDescription: n/a
typedef struct _loadUserNetwork_2Response 
{
    unsigned int loadUserNetwork_2ResultCount;
    _Field_size_opt_(loadUserNetwork_2ResultCount)struct User** loadUserNetwork_2Result; // optional
} _loadUserNetwork_2Response;

// typeDescription: n/a
typedef struct _loadUserNetwork_3 
{
    int idUser;
    WCHAR* securityPass; // optional
} _loadUserNetwork_3;

// typeDescription: n/a
typedef struct _loadUserNetwork_3Response 
{
    WCHAR* loadUserNetwork_3Result; // optional
} _loadUserNetwork_3Response;

// typeDescription: n/a
typedef struct _loadUserNetwork_NR 
{
    int idUser;
    WCHAR* securityPass; // optional
} _loadUserNetwork_NR;

// typeDescription: n/a
typedef struct _loadUserNetwork_NRResponse 
{
    int loadUserNetwork_NRResult;
} _loadUserNetwork_NRResponse;

// typeDescription: n/a
typedef struct _loadUserById 
{
    int id;
    WCHAR* securityPass; // optional
} _loadUserById;

// typeDescription: n/a
typedef struct _loadUserByIdResponse 
{
    struct UserType* loadUserByIdResult; // optional
} _loadUserByIdResponse;

////////////////////////////////////////////////
// Global web service descriptions.
////////////////////////////////////////////////

typedef struct _tempuri_org_xsd
{
    struct // globalElements
    {
        // xml element: login ("http://tempuri.org/")
        // c type: _login
        // elementDescription: tempuri_org_xsd.globalElements.login
        WS_ELEMENT_DESCRIPTION login;
        
        // xml element: loginResponse ("http://tempuri.org/")
        // c type: _loginResponse
        // elementDescription: tempuri_org_xsd.globalElements.loginResponse
        WS_ELEMENT_DESCRIPTION loginResponse;
        
        // xml element: loadUserNetwork ("http://tempuri.org/")
        // c type: _loadUserNetwork
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork
        WS_ELEMENT_DESCRIPTION loadUserNetwork;
        
        // xml element: loadUserNetworkResponse ("http://tempuri.org/")
        // c type: _loadUserNetworkResponse
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetworkResponse
        WS_ELEMENT_DESCRIPTION loadUserNetworkResponse;
        
        // xml element: loadUserNetwork_2 ("http://tempuri.org/")
        // c type: _loadUserNetwork_2
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_2
        WS_ELEMENT_DESCRIPTION loadUserNetwork_2;
        
        // xml element: loadUserNetwork_2Response ("http://tempuri.org/")
        // c type: _loadUserNetwork_2Response
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_2Response
        WS_ELEMENT_DESCRIPTION loadUserNetwork_2Response;
        
        // xml element: loadUserNetwork_3 ("http://tempuri.org/")
        // c type: _loadUserNetwork_3
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_3
        WS_ELEMENT_DESCRIPTION loadUserNetwork_3;
        
        // xml element: loadUserNetwork_3Response ("http://tempuri.org/")
        // c type: _loadUserNetwork_3Response
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_3Response
        WS_ELEMENT_DESCRIPTION loadUserNetwork_3Response;
        
        // xml element: loadUserNetwork_NR ("http://tempuri.org/")
        // c type: _loadUserNetwork_NR
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_NR
        WS_ELEMENT_DESCRIPTION loadUserNetwork_NR;
        
        // xml element: loadUserNetwork_NRResponse ("http://tempuri.org/")
        // c type: _loadUserNetwork_NRResponse
        // elementDescription: tempuri_org_xsd.globalElements.loadUserNetwork_NRResponse
        WS_ELEMENT_DESCRIPTION loadUserNetwork_NRResponse;
        
        // xml element: loadUserById ("http://tempuri.org/")
        // c type: _loadUserById
        // elementDescription: tempuri_org_xsd.globalElements.loadUserById
        WS_ELEMENT_DESCRIPTION loadUserById;
        
        // xml element: loadUserByIdResponse ("http://tempuri.org/")
        // c type: _loadUserByIdResponse
        // elementDescription: tempuri_org_xsd.globalElements.loadUserByIdResponse
        WS_ELEMENT_DESCRIPTION loadUserByIdResponse;
        
    } globalElements;
    struct // externallyReferencedTypes
    {
        WS_STRUCT_DESCRIPTION login;
        WS_STRUCT_DESCRIPTION loginResponse;
        WS_STRUCT_DESCRIPTION loadUserNetwork;
        WS_STRUCT_DESCRIPTION loadUserNetworkResponse;
        WS_STRUCT_DESCRIPTION loadUserNetwork_2;
        WS_STRUCT_DESCRIPTION loadUserNetwork_2Response;
        WS_STRUCT_DESCRIPTION loadUserNetwork_3;
        WS_STRUCT_DESCRIPTION loadUserNetwork_3Response;
        WS_STRUCT_DESCRIPTION loadUserNetwork_NR;
        WS_STRUCT_DESCRIPTION loadUserNetwork_NRResponse;
        WS_STRUCT_DESCRIPTION loadUserById;
        WS_STRUCT_DESCRIPTION loadUserByIdResponse;
    } externallyReferencedTypes;
} _tempuri_org_xsd;

extern const _tempuri_org_xsd tempuri_org_xsd;

#ifdef __cplusplus
}
#endif

